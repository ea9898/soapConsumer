//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.11.07 at 06:40:39 PM MSK 
//


package ru.studio.schemas.xsd;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ru.studio.schemas.xsd package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Applicant_QNAME = new QName("urn:fciit:svd", "Applicant");
    private final static QName _DocumentBatch_QNAME = new QName("urn:fciit:svd", "DocumentBatch");
    private final static QName _ReportBatch_QNAME = new QName("urn:fciit:svd", "ReportBatch");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ru.studio.schemas.xsd
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Report }
     * 
     */
    public Report createReport() {
        return new Report();
    }

    /**
     * Create an instance of {@link ApplicantType }
     * 
     */
    public ApplicantType createApplicantType() {
        return new ApplicantType();
    }

    /**
     * Create an instance of {@link Document }
     * 
     */
    public Document createDocument() {
        return new Document();
    }

    /**
     * Create an instance of {@link Person }
     * 
     */
    public Person createPerson() {
        return new Person();
    }

    /**
     * Create an instance of {@link NPerson }
     * 
     */
    public NPerson createNPerson() {
        return new NPerson();
    }

    /**
     * Create an instance of {@link APerson }
     * 
     */
    public APerson createAPerson() {
        return new APerson();
    }

    /**
     * Create an instance of {@link LPerson }
     * 
     */
    public LPerson createLPerson() {
        return new LPerson();
    }

    /**
     * Create an instance of {@link CPerson }
     * 
     */
    public CPerson createCPerson() {
        return new CPerson();
    }

    /**
     * Create an instance of {@link Blank }
     * 
     */
    public Blank createBlank() {
        return new Blank();
    }

    /**
     * Create an instance of {@link ForeginOrganizationType }
     * 
     */
    public ForeginOrganizationType createForeginOrganizationType() {
        return new ForeginOrganizationType();
    }

    /**
     * Create an instance of {@link RussianOrganizationType }
     * 
     */
    public RussianOrganizationType createRussianOrganizationType() {
        return new RussianOrganizationType();
    }

    /**
     * Create an instance of {@link ValidationStep }
     * 
     */
    public ValidationStep createValidationStep() {
        return new ValidationStep();
    }

    /**
     * Create an instance of {@link FlkStep }
     * 
     */
    public FlkStep createFlkStep() {
        return new FlkStep();
    }

    /**
     * Create an instance of {@link BlankStep }
     * 
     */
    public BlankStep createBlankStep() {
        return new BlankStep();
    }

    /**
     * Create an instance of {@link NotaryStep }
     * 
     */
    public NotaryStep createNotaryStep() {
        return new NotaryStep();
    }

    /**
     * Create an instance of {@link AssignOrder }
     * 
     */
    public AssignOrder createAssignOrder() {
        return new AssignOrder();
    }

    /**
     * Create an instance of {@link License }
     * 
     */
    public License createLicense() {
        return new License();
    }

    /**
     * Create an instance of {@link AssistantStep }
     * 
     */
    public AssistantStep createAssistantStep() {
        return new AssistantStep();
    }

    /**
     * Create an instance of {@link DocumentStep }
     * 
     */
    public DocumentStep createDocumentStep() {
        return new DocumentStep();
    }

    /**
     * Create an instance of {@link ApplicantStep }
     * 
     */
    public ApplicantStep createApplicantStep() {
        return new ApplicantStep();
    }

    /**
     * Create an instance of {@link QrStep }
     * 
     */
    public QrStep createQrStep() {
        return new QrStep();
    }

    /**
     * Create an instance of {@link CanDocumentStep }
     * 
     */
    public CanDocumentStep createCanDocumentStep() {
        return new CanDocumentStep();
    }

    /**
     * Create an instance of {@link ResolutionStep }
     * 
     */
    public ResolutionStep createResolutionStep() {
        return new ResolutionStep();
    }

    /**
     * Create an instance of {@link CanDocumentType }
     * 
     */
    public CanDocumentType createCanDocumentType() {
        return new CanDocumentType();
    }

    /**
     * Create an instance of {@link ActCertifierType }
     * 
     */
    public ActCertifierType createActCertifierType() {
        return new ActCertifierType();
    }

    /**
     * Create an instance of {@link NotaryCertifierType }
     * 
     */
    public NotaryCertifierType createNotaryCertifierType() {
        return new NotaryCertifierType();
    }

    /**
     * Create an instance of {@link Report.Candocuments }
     * 
     */
    public Report.Candocuments createReportCandocuments() {
        return new Report.Candocuments();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplicantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ApplicantType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:fciit:svd", name = "Applicant")
    public JAXBElement<ApplicantType> createApplicant(ApplicantType value) {
        return new JAXBElement<ApplicantType>(_Applicant_QNAME, ApplicantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Document }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Document }{@code >}
     */
    @XmlElementDecl(namespace = "urn:fciit:svd", name = "DocumentBatch")
    public JAXBElement<Document> createDocumentBatch(Document value) {
        return new JAXBElement<Document>(_DocumentBatch_QNAME, Document.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Report }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Report }{@code >}
     */
    @XmlElementDecl(namespace = "urn:fciit:svd", name = "ReportBatch")
    public JAXBElement<Report> createReportBatch(Report value) {
        return new JAXBElement<Report>(_ReportBatch_QNAME, Report.class, null, value);
    }

}
